name: pytest linux - mutual TLS

on: [pull_request, workflow_dispatch]

env:
  PYTHONPATH: ${{ github.workspace }}/src

permissions:
  contents: read

jobs:
  pytest-linux:
    name: "pytest OS: ${{ matrix.os }}; Python ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Docker run
        run: |
          docker run \
            --detach \
            --env SENZING_TOOLS_CLIENT_CA_CERTIFICATE_PATH=/testdata/certificates/certificate-authority/certificate.pem \
            --env SENZING_TOOLS_ENABLE_ALL=true \
            --env SENZING_TOOLS_SERVER_CERTIFICATE_PATH=/testdata/certificates/server/certificate.pem \
            --env SENZING_TOOLS_SERVER_KEY_PATH=/testdata/certificates/server/private_key.pem \
            --name servegrpc \
            --publish 8261:8261 \
            --rm \
            --volume ${{ github.workspace }}/testdata:/testdata \
            senzing/serve-grpc

      - name: Install grpcurl
        run: |
          wget https://github.com/fullstorydev/grpcurl/releases/download/v1.9.3/grpcurl_1.9.3_linux_amd64.deb
          sudo apt-get install -y ./grpcurl_1.9.3_linux_amd64.deb
          grpcurl -version

      - name: Test using grpcurl
        run: |
          grpcurl \
            -cacert ${{ github.workspace }}/testdata/certificates/certificate-authority/certificate.pem \
            -cert ${{ github.workspace }}/testdata/certificates/client/certificate.pem \
            -format text \
            -key ${{ github.workspace }}/testdata/certificates/client/private_key.pem \
            localhost:8261 \
              szproduct.SzProduct.GetVersion

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv ./venv
          source ./venv/bin/activate
          echo "PATH=${PATH}" >> "${GITHUB_ENV}"
          python -m pip install --upgrade pip
          python -m pip install --requirement development-requirements.txt
          python -m pip install --requirement requirements.txt
          python -m pip install psutil pytest pytest-cov pytest-schema

      - if: matrix.python-version == '3.9' || matrix.python-version == '3.10'
        name: Install python libraries for python 3.9 and 3.10
        run: |
          source ./venv/bin/activate
          python -m pip install typing_extensions

      - name: Run pytest
        env:
          SENZING_TOOLS_SERVER_CA_CERTIFICATE_PATH: ${{ github.workspace }}/testdata/certificates/certificate-authority/certificate.pem
          SENZING_TOOLS_CLIENT_CERTIFICATE_PATH: ${{ github.workspace }}/testdata/certificates/client/certificate.pem
          SENZING_TOOLS_CLIENT_KEY_PATH: ${{ github.workspace }}/testdata/certificates/client/private_key.pem
        run: |
          source ./venv/bin/activate
          pytest tests/ --verbose --capture=no --cov=src --cov-append
